{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/SlopeChart.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\n\ninterface GDPData {\n  country: string;\n  year: number;\n  gdp: number;\n}\n\ninterface CountryGDP {\n  country: string;\n  gdp2000: number;\n  gdp2023: number;\n}\n\ninterface SlopeChartProps {\n  data: GDPData[];\n}\n\nconst formatGDP = (value: number) => {\n  if (value >= 1e12) return (value / 1e12).toFixed(1) + \"T\";\n  if (value >= 1e9) return (value / 1e9).toFixed(1) + \"B\";\n  if (value >= 1e6) return (value / 1e6).toFixed(1) + \"M\";\n  if (value >= 1e3) return (value / 1e3).toFixed(1) + \"K\";\n  return value.toString();\n};\n\nconst SlopeChart: React.FC<SlopeChartProps> = ({ data }) => {\n  // Process data to get GDP for 2000 and 2023 per country\n  const countryGDPs: CountryGDP[] = [];\n\n  const countryMap = new Map<string, { gdp2000?: number; gdp2023?: number }>();\n\n  data.forEach(({ country, year, gdp }) => {\n    if (!countryMap.has(country)) {\n      countryMap.set(country, {});\n    }\n    const entry = countryMap.get(country)!;\n    if (year === 2000) {\n      entry.gdp2000 = gdp;\n    } else if (year === 2023) {\n      entry.gdp2023 = gdp;\n    }\n  });\n\n  countryMap.forEach((value, key) => {\n    if (value.gdp2000 !== undefined && value.gdp2023 !== undefined) {\n      countryGDPs.push({\n        country: key,\n        gdp2000: value.gdp2000,\n        gdp2023: value.gdp2023,\n      });\n    }\n  });\n\n  // Sort countries by GDP 2023 descending\n  countryGDPs.sort((a, b) => b.gdp2023 - a.gdp2023);\n\n  return (\n    <div className=\"max-w-5xl mx-auto p-4 font-sans text-gray-900 bg-white\">\n      <h2 className=\"text-2xl font-bold mb-6 text-center\">GDP Comparison 2000 vs 2023</h2>\n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full border-collapse\">\n          <thead>\n            <tr className=\"border-b border-gray-300\">\n              <th className=\"text-left px-2 py-1\">Country</th>\n              <th className=\"text-right px-2 py-1\">2000 GDP</th>\n              <th className=\"px-2 py-1\"></th>\n              <th className=\"text-left px-2 py-1\">2023 GDP</th>\n              <th className=\"text-left px-2 py-1\">Country</th>\n            </tr>\n          </thead>\n          <tbody>\n            {countryGDPs.map(({ country, gdp2000, gdp2023 }) => (\n              <tr key={country} className=\"border-b border-gray-200\">\n                <td className=\"text-left px-2 py-1\">{country}</td>\n                <td className=\"text-right px-2 py-1\">{formatGDP(gdp2000)}</td>\n                <td className=\"px-2 py-1 w-24\">\n                  <svg width=\"100%\" height=\"40\" viewBox=\"0 0 100 40\" preserveAspectRatio=\"none\">\n                    <line\n                      x1=\"0\"\n                      y1=\"30\"\n                      x2=\"100\"\n                      y2=\"10\"\n                      stroke=\"#000\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                    />\n                  </svg>\n                </td>\n                <td className=\"text-left px-2 py-1\">{formatGDP(gdp2023)}</td>\n                <td className=\"text-left px-2 py-1\">{country}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default SlopeChart;\n"],"names":[],"mappings":";;;;AAAA;;AAoBA,MAAM,YAAY,CAAC;IACjB,IAAI,SAAS,MAAM,OAAO,CAAC,QAAQ,IAAI,EAAE,OAAO,CAAC,KAAK;IACtD,IAAI,SAAS,KAAK,OAAO,CAAC,QAAQ,GAAG,EAAE,OAAO,CAAC,KAAK;IACpD,IAAI,SAAS,KAAK,OAAO,CAAC,QAAQ,GAAG,EAAE,OAAO,CAAC,KAAK;IACpD,IAAI,SAAS,KAAK,OAAO,CAAC,QAAQ,GAAG,EAAE,OAAO,CAAC,KAAK;IACpD,OAAO,MAAM,QAAQ;AACvB;AAEA,MAAM,aAAwC,CAAC,EAAE,IAAI,EAAE;IACrD,wDAAwD;IACxD,MAAM,cAA4B,EAAE;IAEpC,MAAM,aAAa,IAAI;IAEvB,KAAK,OAAO,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE;QAClC,IAAI,CAAC,WAAW,GAAG,CAAC,UAAU;YAC5B,WAAW,GAAG,CAAC,SAAS,CAAC;QAC3B;QACA,MAAM,QAAQ,WAAW,GAAG,CAAC;QAC7B,IAAI,SAAS,MAAM;YACjB,MAAM,OAAO,GAAG;QAClB,OAAO,IAAI,SAAS,MAAM;YACxB,MAAM,OAAO,GAAG;QAClB;IACF;IAEA,WAAW,OAAO,CAAC,CAAC,OAAO;QACzB,IAAI,MAAM,OAAO,KAAK,aAAa,MAAM,OAAO,KAAK,WAAW;YAC9D,YAAY,IAAI,CAAC;gBACf,SAAS;gBACT,SAAS,MAAM,OAAO;gBACtB,SAAS,MAAM,OAAO;YACxB;QACF;IACF;IAEA,wCAAwC;IACxC,YAAY,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,OAAO,GAAG,EAAE,OAAO;IAEhD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAsC;;;;;;0BACpD,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAM,WAAU;;sCACf,6LAAC;sCACC,cAAA,6LAAC;gCAAG,WAAU;;kDACZ,6LAAC;wCAAG,WAAU;kDAAsB;;;;;;kDACpC,6LAAC;wCAAG,WAAU;kDAAuB;;;;;;kDACrC,6LAAC;wCAAG,WAAU;;;;;;kDACd,6LAAC;wCAAG,WAAU;kDAAsB;;;;;;kDACpC,6LAAC;wCAAG,WAAU;kDAAsB;;;;;;;;;;;;;;;;;sCAGxC,6LAAC;sCACE,YAAY,GAAG,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,iBAC7C,6LAAC;oCAAiB,WAAU;;sDAC1B,6LAAC;4CAAG,WAAU;sDAAuB;;;;;;sDACrC,6LAAC;4CAAG,WAAU;sDAAwB,UAAU;;;;;;sDAChD,6LAAC;4CAAG,WAAU;sDACZ,cAAA,6LAAC;gDAAI,OAAM;gDAAO,QAAO;gDAAK,SAAQ;gDAAa,qBAAoB;0DACrE,cAAA,6LAAC;oDACC,IAAG;oDACH,IAAG;oDACH,IAAG;oDACH,IAAG;oDACH,QAAO;oDACP,aAAY;oDACZ,eAAc;;;;;;;;;;;;;;;;sDAIpB,6LAAC;4CAAG,WAAU;sDAAuB,UAAU;;;;;;sDAC/C,6LAAC;4CAAG,WAAU;sDAAuB;;;;;;;mCAjB9B;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBvB;KAxEM;uCA0ES","debugId":null}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useState } from \"react\";\nimport SlopeChart from \"@/components/ui/SlopeChart\";\n\ninterface GDPData {\n  country: string;\n  year: number;\n  gdp: number;\n}\n\nconst csvData =\n  \"country,year,gdp\\n\" +\n  \"Afghanistan,2000,11283793920\\n\" +\n  \"Afghanistan,2023,45709816441\\n\" +\n  \"Albania,2000,14736835584\\n\" +\n  \"Albania,2023,22444407943\\n\" +\n  \"Algeria,2000,208554147840\\n\" +\n  \"Algeria,2023,568576354523\\n\" +\n  \"Angola,2000,23512182784\\n\" +\n  \"Angola,2023,109564802802\\n\" +\n  \"Argentina,2000,536480972800\\n\" +\n  \"Argentina,2023,864444473751\\n\" +\n  \"Armenia,2000,15244825600\\n\" +\n  \"Armenia,2023,21608530010\\n\" +\n  \"Australia,2000,692059308032\\n\" +\n  \"Australia,2023,1373028859238\\n\" +\n  \"Austria,2000,280410161152\\n\" +\n  \"Austria,2023,337330694046\\n\" +\n  \"Azerbaijan,2000,34255706112\\n\" +\n  \"Azerbaijan,2023,135828851231\\n\" +\n  \"Bahrain,2000,11032289280\\n\" +\n  \"Bahrain,2023,49220323350\\n\" +\n  \"Bangladesh,2000,200824291328\\n\" +\n  \"Bangladesh,2023,491299203543\\n\" +\n  \"Barbados,2000,3452406272\\n\" +\n  \"Barbados,2023,7650056525\\n\" +\n  \"Belarus,2000,91419115520\\n\" +\n  \"Belarus,2023,230860132306\\n\" +\n  \"Belgium,2000,345706889216\\n\" +\n  \"Belgium,2023,403487216781\\n\" +\n  \"Benin,2000,12746225664\\n\" +\n  \"Benin,2023,23509891191\\n\" +\n  \"Bolivia,2000,34126235648\\n\" +\n  \"Bolivia,2023,68228660531\\n\" +\n  \"Bosnia and Herzegovina,2000,27629709312\\n\" +\n  \"Bosnia and Herzegovina,2023,38991341703\\n\" +\n  \"Botswana,2000,13391002624\\n\" +\n  \"Botswana,2023,38007675737\\n\" +\n  \"Brazil,2000,1739727962112\\n\" +\n  \"Brazil,2023,3228976221674\\n\" +\n  \"Bulgaria,2000,67719766016\\n\" +\n  \"Bulgaria,2023,156706721785\\n\" +\n  \"Burkina Faso,2000,14546973696\\n\" +\n  \"Burkina Faso,2023,31858094004\\n\" +\n  \"Burundi,2000,4647178240\\n\" +\n  \"Burundi,2023,7169059321\\n\" +\n  \"Cambodia,2000,20435398656\\n\" +\n  \"Cambodia,2023,70272534020\\n\" +\n  \"Cameroon,2000,31207712768\\n\" +\n  \"Cameroon,2023,66130627290\\n\" +\n  \"Canada,2000,1137681367040\\n\" +\n  \"Canada,2023,2188824966120\\n\" +\n  \"Cape Verde,2000,1540942336\\n\" +\n  \"Cape Verde,2023,23582650986\\n\" +\n  \"Central African Republic,2000,3836505856\\n\" +\n  \"Central African Republic,2023,-11891182374\\n\" +\n  \"Chad,2000,5599887872\\n\" +\n  \"Chad,2023,19170928108\\n\" +\n  \"Chile,2000,233340518400\\n\" +\n  \"Chile,2023,407584903828\\n\" +\n  \"China,2000,5952682590208\\n\" +\n  \"China,2023,36672746758617\\n\" +\n  \"Colombia,2000,330615619584\\n\" +\n  \"Colombia,2023,735698927901\\n\" +\n  \"Comoros,2000,656399296\\n\" +\n  \"Comoros,2023,24579595095\\n\" +\n  \"Congo,2000,12472136704\\n\" +\n  \"Congo,2023,16221612682\\n\" +\n  \"Costa Rica,2000,36043079680\\n\" +\n  \"Costa Rica,2023,41730191629\\n\" +\n  \"Cote d'Ivoire,2000,41297596416\\n\" +\n  \"Cote d'Ivoire,2023,227688827726\\n\" +\n  \"Croatia,2000,57398796288\\n\" +\n  \"Croatia,2023,76163265025\\n\" +\n  \"Cuba,2000,44692111360\\n\" +\n  \"Cuba,2023,76708004399\\n\" +\n  \"Cyprus,2000,18447964160\\n\" +\n  \"Cyprus,2023,30305119977\\n\" +\n  \"Czechia,2000,174309523456\\n\" +\n  \"Czechia,2023,252345816290\\n\" +\n  \"Democratic Republic of Congo,2000,21854113792\\n\" +\n  \"Democratic Republic of Congo,2023,17308491491\\n\" +\n  \"Denmark,2000,208333668352\\n\" +\n  \"Denmark,2023,165278622876\\n\" +\n  \"Djibouti,2000,1258388224\\n\" +\n  \"Djibouti,2023,-3790617378\\n\" +\n  \"Dominica,2000,404483808\\n\" +\n  \"Dominica,2023,-5591698290\\n\" +\n  \"Dominican Republic,2000,56344969216\\n\" +\n  \"Dominican Republic,2023,106512795421\\n\" +\n  \"Ecuador,2000,85978890240\\n\" +\n  \"Ecuador,2023,195582119420\\n\" +\n  \"Egypt,2000,444250292224\\n\" +\n  \"Egypt,2023,996991361266\\n\" +\n  \"El Salvador,2000,31478454272\\n\" +\n  \"El Salvador,2023,37932960527\\n\" +\n  \"Equatorial Guinea,2000,6341192192\\n\" +\n  \"Equatorial Guinea,2023,21856696282\\n\" +\n  \"Estonia,2000,23525730304\\n\" +\n  \"Estonia,2023,36299499130\\n\" +\n  \"Eswatini,2000,5050303488\\n\" +\n  \"Eswatini,2023,6138608642\\n\" +\n  \"Ethiopia,2000,50326966272\\n\" +\n  \"Ethiopia,2023,265419405755\\n\" +\n  \"Finland,2000,169209757696\\n\" +\n  \"Finland,2023,325756960160\\n\" +\n  \"France,2000,2031676030976\\n\" +\n  \"France,2023,2600766484925\\n\" +\n  \"Gabon,2000,12538030080\\n\" +\n  \"Gabon,2023,38214290193\\n\" +\n  \"Gambia,2000,1955249664\\n\" +\n  \"Gambia,2023,3554084367\\n\" +\n  \"Georgia,2000,23550476288\\n\" +\n  \"Georgia,2023,45390217791\\n\" +\n  \"Germany,2000,2718560681984\\n\" +\n  \"Germany,2023,3053965747545\\n\" +\n  \"Ghana,2000,41569378304\\n\" +\n  \"Ghana,2023,100464357633\\n\" +\n  \"Greece,2000,223530909696\\n\" +\n  \"Greece,2023,264052580270\\n\" +\n  \"Guatemala,2000,68731617280\\n\" +\n  \"Guatemala,2023,75525547376\\n\" +\n  \"Guinea,2000,8142367744\\n\" +\n  \"Guinea,2023,19868424966\\n\" +\n  \"Guinea-Bissau,2000,1486201600\\n\" +\n  \"Guinea-Bissau,2023,-21026673064\\n\" +\n  \"Haiti,2000,12590117888\\n\" +\n  \"Haiti,2023,19080386236\\n\" +\n  \"Honduras,2000,21239306240\\n\" +\n  \"Honduras,2023,39075115620\\n\" +\n  \"Hong Kong,2000,218622148608\\n\" +\n  \"Hong Kong,2023,349274569597\\n\" +\n  \"Hungary,2000,134151503872\\n\" +\n  \"Hungary,2023,258159855149\\n\" +\n  \"Iceland,2000,9307402240\\n\" +\n  \"Iceland,2023,13382932970\\n\" +\n  \"India,2000,2804478640128\\n\" +\n  \"India,2023,6824447769097\\n\" +\n  \"Indonesia,2000,1138300157952\\n\" +\n  \"Indonesia,2023,2440677174673\\n\" +\n  \"Iran,2000,595554533376\\n\" +\n  \"Iran,2023,1975979930196\\n\" +\n  \"Iraq,2000,83019210752\\n\" +\n  \"Iraq,2023,659573493228\\n\" +\n  \"Ireland,2000,147722371072\\n\" +\n  \"Ireland,2023,164890456888\\n\" +\n  \"Israel,2000,158656380928\\n\" +\n  \"Israel,2023,250903064745\\n\" +\n  \"Italy,2000,1863751565312\\n\" +\n  \"Italy,2023,1602631548481\\n\" +\n  \"Jamaica,2000,17441468416\\n\" +\n  \"Jamaica,2023,27427631001\\n\" +\n  \"Japan,2000,4209652006912\\n\" +\n  \"Japan,2023,4514072299130\\n\" +\n  \"Jordan,2000,35825242112\\n\" +\n  \"Jordan,2023,71293539095\\n\" +\n  \"Kazakhstan,2000,142758084608\\n\" +\n  \"Kazakhstan,2023,524145390341\\n\" +\n  \"Kenya,2000,59408908288\\n\" +\n  \"Kenya,2023,120888217965\\n\" +\n  \"Kuwait,2000,71053967360\\n\" +\n  \"Kuwait,2023,309410424707\\n\" +\n  \"Kyrgyzstan,2000,15667564544\\n\" +\n  \"Kyrgyzstan,2023,37004346322\\n\" +\n  \"Laos,2000,12209285120\\n\" +\n  \"Laos,2023,56266160632\\n\" +\n  \"Latvia,2000,26727290880\\n\" +\n  \"Latvia,2023,38020814217\\n\" +\n  \"Lebanon,2000,25915975680\\n\" +\n  \"Lebanon,2023,65197624446\\n\" +\n  \"Lesotho,2000,3769602048\\n\" +\n  \"Lesotho,2023,18623232711\\n\" +\n  \"Liberia,2000,2767093504\\n\" +\n  \"Liberia,2023,11106725475\\n\" +\n  \"Libya,2000,49983451136\\n\" +\n  \"Libya,2023,308490258192\\n\" +\n  \"Lithuania,2000,36684800000\\n\" +\n  \"Lithuania,2023,63948487843\\n\" +\n  \"Luxembourg,2000,21937467392\\n\" +\n  \"Luxembourg,2023,31173561623\\n\" +\n  \"Madagascar,2000,19457200128\\n\" +\n  \"Madagascar,2023,54939554461\\n\" +\n  \"Malawi,2000,11274206208\\n\" +\n  \"Malawi,2023,9098866679\\n\" +\n  \"Malaysia,2000,305803231232\\n\" +\n  \"Malaysia,2023,1034591416249\\n\" +\n  \"Mali,2000,12490372096\\n\" +\n  \"Mali,2023,32008808958\\n\" +\n  \"Malta,2000,7963752448\\n\" +\n  \"Malta,2023,10280507116\\n\" +\n  \"Mauritania,2000,4838790144\\n\" +\n  \"Mauritania,2023,15591715353\\n\" +\n  \"Mauritius,2000,16933370880\\n\" +\n  \"Mauritius,2023,24386744267\\n\" +\n  \"Mexico,2000,1241194692608\\n\" +\n  \"Mexico,2023,1786565662754\\n\" +\n  \"Moldova,2000,12554043392\\n\" +\n  \"Moldova,2023,31551482991\\n\" +\n  \"Mongolia,2000,7225650176\\n\" +\n  \"Mongolia,2023,127811890566\\n\" +\n  \"Morocco,2000,136639291392\\n\" +\n  \"Morocco,2023,222032132428\\n\" +\n  \"Mozambique,2000,20141920256\\n\" +\n  \"Mozambique,2023,52282655353\\n\" +\n  \"Myanmar,2000,84093542400\\n\" +\n  \"Myanmar,2023,186142815496\\n\" +\n  \"Namibia,2000,11306497024\\n\" +\n  \"Namibia,2023,21664868815\\n\" +\n  \"Nepal,2000,39381725184\\n\" +\n  \"Nepal,2023,56005634662\\n\" +\n  \"Netherlands,2000,603803025408\\n\" +\n  \"Netherlands,2023,861855520796\\n\" +\n  \"New Zealand,2000,104942108672\\n\" +\n  \"New Zealand,2023,239154265559\\n\" +\n  \"Nicaragua,2000,13909592064\\n\" +\n  \"Nicaragua,2023,24778601622\\n\" +\n  \"Niger,2000,7478107648\\n\" +\n  \"Niger,2023,33254519886\\n\" +\n  \"Nigeria,2000,268133056512\\n\" +\n  \"Nigeria,2023,831326482860\\n\" +\n  \"North Korea,2000,37758033920\\n\" +\n  \"North Korea,2023,92395256808\\n\" +\n  \"Norway,2000,242751291392\\n\" +\n  \"Norway,2023,471532091030\\n\" +\n  \"Oman,2000,58124189696\\n\" +\n  \"Oman,2023,277170590696\\n\" +\n  \"Pakistan,2000,459798511616\\n\" +\n  \"Pakistan,2023,839881464795\\n\" +\n  \"Palestine,2000,16535485440\\n\" +\n  \"Palestine,2023,12152122982\\n\" +\n  \"Panama,2000,28706486272\\n\" +\n  \"Panama,2023,65933467576\\n\" +\n  \"Paraguay,2000,26799187968\\n\" +\n  \"Paraguay,2023,35403276561\\n\" +\n  \"Peru,2000,128561594368\\n\" +\n  \"Peru,2023,349748283234\\n\" +\n  \"Philippines,2000,327247659008\\n\" +\n  \"Philippines,2023,662402686337\\n\" +\n  \"Poland,2000,488207646720\\n\" +\n  \"Poland,2023,995988532231\\n\" +\n  \"Portugal,2000,238756380672\\n\" +\n  \"Portugal,2023,215017999093\\n\" +\n  \"Qatar,2000,30159720448\\n\" +\n  \"Qatar,2023,277623520874\\n\" +\n  \"Romania,2000,157839294464\\n\" +\n  \"Romania,2023,333824447190\\n\" +\n  \"Russia,2000,1547057496064\\n\" +\n  \"Russia,2023,2249325463838\\n\" +\n  \"Rwanda,2000,8053572096\\n\" +\n  \"Rwanda,2023,9063254829\\n\" +\n  \"Saint Lucia,2000,1100265088\\n\" +\n  \"Saint Lucia,2023,-8052902115\\n\" +\n  \"Sao Tome and Principe,2000,312853568\\n\" +\n  \"Sao Tome and Principe,2023,28453815810\\n\" +\n  \"Saudi Arabia,2000,488272429056\\n\" +\n  \"Saudi Arabia,2023,2114121526423\\n\" +\n  \"Senegal,2000,20439619584\\n\" +\n  \"Senegal,2023,44826131910\\n\" +\n  \"Serbia,2000,45972176896\\n\" +\n  \"Serbia,2023,126520153281\\n\" +\n  \"Seychelles,2000,1136006784\\n\" +\n  \"Seychelles,2023,5416666669\\n\" +\n  \"Sierra Leone,2000,3156876032\\n\" +\n  \"Sierra Leone,2023,9305872699\\n\" +\n  \"Singapore,2000,152153571328\\n\" +\n  \"Singapore,2023,423351382932\\n\" +\n  \"Slovakia,2000,74595098624\\n\" +\n  \"Slovakia,2023,136734632470\\n\" +\n  \"Slovenia,2000,43078787072\\n\" +\n  \"Slovenia,2023,55231951406\\n\" +\n  \"South Africa,2000,356072095744\\n\" +\n  \"South Africa,2023,949441163990\\n\" +\n  \"South Korea,2000,1086261690368\\n\" +\n  \"South Korea,2023,2212912925190\\n\" +\n  \"Spain,2000,1094998753280\\n\" +\n  \"Spain,2023,1518841197621\\n\" +\n  \"Sri Lanka,2000,114541756416\\n\" +\n  \"Sri Lanka,2023,83124224527\\n\" +\n  \"Sweden,2000,303452356608\\n\" +\n  \"Sweden,2023,461140017969\\n\" +\n  \"Switzerland,2000,315545354240\\n\" +\n  \"Switzerland,2023,409177787942\\n\" +\n  \"Syria,2000,125214244864\\n\" +\n  \"Syria,2023,90091929886\\n\" +\n  \"Taiwan,2000,591153922048\\n\" +\n  \"Taiwan,2023,1053767201724\\n\" +\n  \"Tajikistan,2000,10735321088\\n\" +\n  \"Tajikistan,2023,33486088186\\n\" +\n  \"Tanzania,2000,39001698304\\n\" +\n  \"Tanzania,2023,135028515137\\n\" +\n  \"Thailand,2000,579217719296\\n\" +\n  \"Thailand,2023,1054892713266\\n\" +\n  \"Togo,2000,5742626816\\n\" +\n  \"Togo,2023,8867989824\\n\" +\n  \"Trinidad and Tobago,2000,24996995072\\n\" +\n  \"Trinidad and Tobago,2023,55237608453\\n\" +\n  \"Tunisia,2000,71818854400\\n\" +\n  \"Tunisia,2023,90537091506\\n\" +\n  \"Turkey,2000,785054957568\\n\" +\n  \"Turkey,2023,1882753927766\\n\" +\n  \"Turkmenistan,2000,18299209728\\n\" +\n  \"Turkmenistan,2023,243463106005\\n\" +\n  \"Uganda,2000,28839086080\\n\" +\n  \"Uganda,2023,39645743045\\n\" +\n  \"Ukraine,2000,253196025856\\n\" +\n  \"Ukraine,2023,559050160782\\n\" +\n  \"United Arab Emirates,2000,160530694144\\n\" +\n  \"United Arab Emirates,2023,874672476540\\n\" +\n  \"United Kingdom,2000,1889565278208\\n\" +\n  \"United Kingdom,2023,2500577778984\\n\" +\n  \"United States,2000,12947416940544\\n\" +\n  \"United States,2023,16849829251726\\n\" +\n  \"Uruguay,2000,42357506048\\n\" +\n  \"Uruguay,2023,54298599052\\n\" +\n  \"Uzbekistan,2000,116875837440\\n\" +\n  \"Uzbekistan,2023,417181191981\\n\" +\n  \"Venezuela,2000,330236198912\\n\" +\n  \"Venezuela,2023,708932170462\\n\" +\n  \"Vietnam,2000,220383068160\\n\" +\n  \"Vietnam,2023,866796943351\\n\" +\n  \"World,2000,59897668435968\\n\" +\n  \"World,2023,114484668157798\\n\" +\n  \"Yemen,2000,72599511040\\n\" +\n  \"Yemen,2023,60033348396\\n\" +\n  \"Zambia,2000,15211407360\\n\" +\n  \"Zambia,2023,35022322308\\n\" +\n  \"Zimbabwe,2000,26765004800\\n\" +\n  \"Zimbabwe,2023,41585004489\\n\";\n\nconst parseCSV = (csv: string): GDPData[] => {\n  const lines = csv.trim().split(\"\\\\n\");\n  const result: GDPData[] = [];\n  for (let i = 1; i < lines.length; i++) {\n    const [country, yearStr, gdpStr] = lines[i].split(\",\");\n    result.push({\n      country: country,\n      year: Number(yearStr),\n      gdp: Number(gdpStr),\n    });\n  }\n  return result;\n};\n\nexport default function Home() {\n  const [data, setData] = useState<GDPData[]>([]);\n\n  useEffect(() => {\n    const parsedData = parseCSV(csvData);\n    setData(parsedData);\n  }, []);\n\n  return (\n    <main className=\"min-h-screen bg-white text-gray-900 font-sans p-8\">\n      <SlopeChart data={data} />\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAWA,MAAM,UACJ,uBACA,mCACA,mCACA,+BACA,+BACA,gCACA,gCACA,8BACA,+BACA,kCACA,kCACA,+BACA,+BACA,kCACA,mCACA,gCACA,gCACA,kCACA,mCACA,+BACA,+BACA,mCACA,mCACA,+BACA,+BACA,+BACA,gCACA,gCACA,gCACA,6BACA,6BACA,+BACA,+BACA,8CACA,8CACA,gCACA,gCACA,gCACA,gCACA,gCACA,iCACA,oCACA,oCACA,8BACA,8BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,iCACA,kCACA,+CACA,iDACA,2BACA,4BACA,8BACA,8BACA,+BACA,gCACA,iCACA,iCACA,6BACA,+BACA,6BACA,6BACA,kCACA,kCACA,qCACA,sCACA,+BACA,+BACA,4BACA,4BACA,8BACA,8BACA,gCACA,gCACA,oDACA,oDACA,gCACA,gCACA,+BACA,gCACA,8BACA,gCACA,0CACA,2CACA,+BACA,gCACA,8BACA,8BACA,mCACA,mCACA,wCACA,yCACA,+BACA,+BACA,+BACA,+BACA,gCACA,iCACA,gCACA,gCACA,gCACA,gCACA,6BACA,6BACA,6BACA,6BACA,+BACA,+BACA,iCACA,iCACA,6BACA,8BACA,+BACA,+BACA,iCACA,iCACA,6BACA,8BACA,oCACA,sCACA,6BACA,6BACA,gCACA,gCACA,kCACA,kCACA,gCACA,gCACA,8BACA,+BACA,+BACA,+BACA,mCACA,mCACA,6BACA,8BACA,4BACA,6BACA,gCACA,gCACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,8BACA,8BACA,mCACA,mCACA,6BACA,8BACA,8BACA,+BACA,kCACA,kCACA,4BACA,4BACA,8BACA,8BACA,+BACA,+BACA,8BACA,+BACA,8BACA,+BACA,6BACA,8BACA,iCACA,iCACA,kCACA,kCACA,kCACA,kCACA,8BACA,6BACA,iCACA,kCACA,4BACA,4BACA,4BACA,6BACA,iCACA,kCACA,iCACA,iCACA,gCACA,gCACA,+BACA,+BACA,+BACA,iCACA,gCACA,gCACA,kCACA,kCACA,+BACA,gCACA,+BACA,+BACA,6BACA,6BACA,oCACA,oCACA,oCACA,oCACA,iCACA,iCACA,4BACA,6BACA,gCACA,gCACA,mCACA,mCACA,+BACA,+BACA,4BACA,6BACA,iCACA,iCACA,iCACA,iCACA,8BACA,8BACA,gCACA,gCACA,6BACA,6BACA,oCACA,oCACA,+BACA,+BACA,iCACA,iCACA,6BACA,8BACA,gCACA,gCACA,gCACA,gCACA,6BACA,6BACA,kCACA,mCACA,2CACA,6CACA,qCACA,sCACA,+BACA,+BACA,8BACA,+BACA,iCACA,iCACA,mCACA,mCACA,kCACA,kCACA,gCACA,iCACA,gCACA,gCACA,qCACA,qCACA,qCACA,qCACA,+BACA,+BACA,kCACA,iCACA,+BACA,+BACA,oCACA,oCACA,8BACA,6BACA,+BACA,gCACA,kCACA,kCACA,gCACA,iCACA,iCACA,kCACA,2BACA,2BACA,2CACA,2CACA,+BACA,+BACA,+BACA,gCACA,oCACA,qCACA,8BACA,8BACA,gCACA,gCACA,6CACA,6CACA,wCACA,wCACA,wCACA,wCACA,+BACA,+BACA,mCACA,mCACA,kCACA,kCACA,gCACA,gCACA,gCACA,iCACA,6BACA,6BACA,8BACA,8BACA,gCACA;AAEF,MAAM,WAAW,CAAC;IAChB,MAAM,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC;IAC/B,MAAM,SAAoB,EAAE;IAC5B,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;QACrC,MAAM,CAAC,SAAS,SAAS,OAAO,GAAG,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC;QAClD,OAAO,IAAI,CAAC;YACV,SAAS;YACT,MAAM,OAAO;YACb,KAAK,OAAO;QACd;IACF;IACA,OAAO;AACT;AAEe,SAAS;;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IAE9C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,MAAM,aAAa,SAAS;YAC5B,QAAQ;QACV;yBAAG,EAAE;IAEL,qBACE,6LAAC;QAAK,WAAU;kBACd,cAAA,6LAAC,yIAAA,CAAA,UAAU;YAAC,MAAM;;;;;;;;;;;AAGxB;GAbwB;KAAA","debugId":null}}]
}